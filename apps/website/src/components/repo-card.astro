---
// Based on https://github.com/Tarptaeya/repo-card
interface Props {
  repo: string;
}

const { repo } = Astro.props;
---

<div
  id="repo-card-wrapper"
  class="border-[#e1e4e8] @dark:border-[#30363D] bg-[white] @dark:bg-[#0D1117] border rounded-md p-4 text-sm leading-normal text-[#24292e]"
>
  <div class="flex items-center">
    <svg
      class="repo-card-fill mr-2"
      viewBox="0 0 16 16"
      version="1.1"
      width="16"
      height="16"
      aria-hidden="true"
      ><path
        fill-rule="evenodd"
        d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"
      ></path></svg
    >
    <span class="text-[#0366d6] @dark:text-[#58A6FF] font-semibold">
      <a id="repo-card-name" class="no-underline text-inherit"></a>
    </span>
  </div>
  <div id="repo-card-forked-from-wrapper" class="repo-card-color text-xs">
    Forked from <a id="repo-card-forked-from" class="text-inherit no-underline"
    ></a>
  </div>
  <div id="repo-card-description" class="repo-card-color text-xs mb-4 mt-2">
  </div>
  <div class="repo-card-color text-xs flex">
    <div id="repo-card-language-wrapper" class="mr-4">
      <span
        id="repo-card-language-bg"
        class="w-3 h-3 rounded-full inline-block relative top-[1px]"></span>
      <span id="repo-card-language"></span>
    </div>
    <div id="repo-card-stars-wrapper" class="items-center mr-4">
      <svg
        class="repo-card-fill"
        aria-label="stars"
        viewBox="0 0 16 16"
        version="1.1"
        width="16"
        height="16"
        role="img"
        ><path
          fill-rule="evenodd"
          d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"
        ></path></svg
      >
      &nbsp; <span id="repo-card-stars"></span>
    </div>
    <div id="repo-card-forks-wrapper" class="items-center">
      <svg
        class="repo-card-fill"
        aria-label="fork"
        viewBox="0 0 16 16"
        version="1.1"
        width="16"
        height="16"
        role="img"
        ><path
          fill-rule="evenodd"
          d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"
        ></path></svg
      >
      &nbsp; <span id="repo-card-forks"></span>
    </div>
  </div>
</div>

<style>
  .repo-card-color {
    @apply text-[#586069] @dark:text-[#8B949E];
  }

  .repo-card-fill {
    @apply fill-[#586069] @dark:fill-[#8B949E];
  }
</style>

<script is:inline define:vars={{ repo }}>
  const CACHE_TIMEOUT = 60000;

  async function get(url) {
    const now = new Date().getTime();
    const prevResp = JSON.parse(localStorage.getItem(url));
    if (prevResp && Math.abs(now - prevResp.time) < CACHE_TIMEOUT) {
      return prevResp.data;
    }
    const resp = await fetch(url);
    const json = await resp.json();
    localStorage.setItem(url, JSON.stringify({ time: now, data: json }));
    return json;
  }

  document.addEventListener("astro:page-load", async () => {
    const emojis = await get("https://api.github.com/emojis");
    const colors = await get(
      "https://raw.githubusercontent.com/ozh/github-colors/master/colors.json",
    );
    const data = await get(`https://api.github.com/repos/${repo}`);

    const name = document.querySelector("#repo-card-name");
    name.textContent = data.name;
    name.href = data.html_url;

    const forkedFromWrapper = document.querySelector(
      "#repo-card-forked-from-wrapper",
    );
    forkedFromWrapper.style.display = data.fork ? "flex" : "none";

    const forkedFrom = document.querySelector("#repo-card-forked-from");
    forkedFrom.textContent = data.fork ? data.source.full_name : "";
    forkedFrom.href = data.fork ? data.source.html_url : "";

    const description = document.querySelector("#repo-card-description");
    description.innerHTML = (data.description || "").replace(
      /:\w+:/g,
      function (match) {
        const name = match.substring(1, match.length - 1);
        const emoji = emojis[name];

        if (emoji) {
          return `<span><img src="${emoji}" class="w-[1rem] h-[1rem] align-[-0.2rem]" alt="${name}"></span>`;
        }

        return match;
      },
    );

    const languageWrapper = document.querySelector(
      "#repo-card-language-wrapper",
    );
    languageWrapper.style.display = data.language ? "" : "none";

    const languageBg = document.querySelector("#repo-card-language-bg");
    languageBg.style.backgroundColor = data.language
      ? colors[data.language].color
      : "";

    const language = document.querySelector("#repo-card-language");
    language.textContent = data.language;

    const starsWrapper = document.querySelector("#repo-card-stars-wrapper");
    starsWrapper.style.display = data.stargazers_count === 0 ? "none" : "flex";

    const stars = document.querySelector("#repo-card-stars");
    stars.textContent = data.stargazers_count;

    const forksWrapper = document.querySelector("#repo-card-forks-wrapper");
    forksWrapper.style.display = data.forks === 0 ? "none" : "flex";

    const forks = document.querySelector("#repo-card-forks");
    forks.textContent = data.forks;
  });
</script>
